Program([FuncDecl(Id(findRoots), [VarDecl(Id(a), NumberType, None, None), VarDecl(Id(b), NumberType, None, None), VarDecl(Id(c), NumberType, None, None)], Block([If((BinaryOp(==, Id(a), NumLit(0.0)), Block([CallStmt(Id(writeString), [StringLit(Invalid)]), Return()])), [], None), VarDecl(Id(d), NumberType, None, BinaryOp(-, BinaryOp(*, Id(b), Id(b)), BinaryOp(*, BinaryOp(*, NumLit(4.0), Id(a)), Id(c)))), VarDecl(Id(sqrt_val), NumberType, None, CallExpr(Id(sqrt), [CallExpr(Id(abs), [Id(d)])])), If((BinaryOp(>, Id(d), NumLit(0.0)), Block([CallStmt(Id(writeString), [StringLit(Roots are real and different )]), CallStmt(Id(writeString), [BinaryOp(..., BinaryOp(..., CallExpr(Id(str), [BinaryOp(/, BinaryOp(+, UnaryOp(-, Id(b)), Id(sqrt_val)), BinaryOp(*, NumLit(2.0), Id(a)))]), StringLit( )), CallExpr(Id(str), [BinaryOp(/, BinaryOp(-, UnaryOp(-, Id(b)), Id(sqrt_val)), BinaryOp(*, NumLit(2.0), Id(a)))]))])])), [], If((BinaryOp(==, Id(d), NumLit(0.0)), Block([CallStmt(Id(writeString), [StringLit(Roots are real and same )]), CallStmt(Id(writeNumber), [BinaryOp(/, UnaryOp(-, Id(b)), BinaryOp(*, NumLit(2.0), Id(a)))])])), [], Block([CallStmt(Id(writeString), [StringLit(Roots are complex )]), CallStmt(Id(writeString), [BinaryOp(..., BinaryOp(..., BinaryOp(..., BinaryOp(..., BinaryOp(..., BinaryOp(..., CallExpr(Id(str), [BinaryOp(/, UnaryOp(-, Id(b)), BinaryOp(*, NumLit(2.0), Id(a)))]), StringLit( + i)), CallExpr(Id(str), [BinaryOp(/, Id(sqrt_val), BinaryOp(*, NumLit(2.0), Id(a)))])), StringLit( )), CallExpr(Id(str), [BinaryOp(/, UnaryOp(-, Id(b)), BinaryOp(*, NumLit(2.0), Id(a)))])), StringLit( - i)), CallExpr(Id(str), [BinaryOp(/, Id(sqrt_val), BinaryOp(*, NumLit(2.0), Id(a)))]))])])))])), FuncDecl(Id(main), [], Block([VarDecl(Id(a), NumberType, None, NumLit(1.0)), VarDecl(Id(b), NumberType, None, UnaryOp(-, NumLit(7.0))), VarDecl(Id(c), NumberType, None, NumLit(12.0)), CallStmt(Id(findRoots), [Id(a), Id(b), Id(c)])]))])