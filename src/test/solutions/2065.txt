Program([FuncDecl(Id(main), [], Block([VarDecl(Id(n), NumberType, None, NumLit(5.0)), VarDecl(Id(rows), NumberType, None, None), VarDecl(Id(columns), NumberType, None, None), AssignStmt(Id(rows), NumLit(1.0)), For(Id(rows), BinaryOp(>, Id(rows), Id(n)), NumLit(1.0), Block([AssignStmt(Id(columns), Id(n)), For(Id(columns), BinaryOp(<=, Id(columns), Id(rows)), UnaryOp(-, NumLit(1.0)), Block([CallStmt(Id(writeString), [StringLit( )])])), CallStmt(Id(writeString), [StringLit(*)]), AssignStmt(Id(columns), NumLit(1.0)), For(Id(columns), BinaryOp(>=, Id(columns), BinaryOp(*, BinaryOp(-, Id(rows), NumLit(1.0)), NumLit(2.0))), NumLit(1.0), Block([CallStmt(Id(writeString), [StringLit( )])])), If((BinaryOp(==, Id(rows), NumLit(1.0)), Block([CallStmt(Id(writeString), [StringLit(\\n)])])), [], Block([CallStmt(Id(writeString), [StringLit(*\\n)])]))])), AssignStmt(Id(rows), BinaryOp(-, Id(n), NumLit(1.0))), For(Id(rows), BinaryOp(<, Id(rows), NumLit(1.0)), UnaryOp(-, NumLit(1.0)), Block([AssignStmt(Id(columns), Id(n)), For(Id(columns), BinaryOp(<=, Id(columns), Id(rows)), UnaryOp(-, NumLit(1.0)), Block([CallStmt(Id(writeString), [StringLit( )])])), CallStmt(Id(writeString), [StringLit(*)]), AssignStmt(Id(columns), NumLit(1.0)), For(Id(columns), BinaryOp(>=, Id(columns), BinaryOp(*, BinaryOp(-, Id(rows), NumLit(1.0)), NumLit(2.0))), NumLit(1.0), Block([CallStmt(Id(writeString), [StringLit( )])])), If((BinaryOp(==, Id(rows), NumLit(1.0)), Block([CallStmt(Id(writeString), [StringLit(\\n)])])), [], Block([CallStmt(Id(writeString), [StringLit(*\\n)])]))]))]))])