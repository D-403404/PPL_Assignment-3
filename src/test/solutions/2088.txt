Program([FuncDecl(Id(checkPangram), [VarDecl(Id(str), StringType, None, None)], Block([VarDecl(Id(mark), ArrayType([26.0], BoolType), None, ArrayLit(BooleanLit(False))), VarDecl(Id(index), NumberType, None, None), VarDecl(Id(i), NumberType, None, NumLit(0.0)), For(Id(i), BinaryOp(>=, Id(i), CallExpr(Id(length), [Id(str)])), NumLit(1.0), Block([If((BinaryOp(and, BinaryOp(<=, StringLit(A), ArrayCell(Id(str), [Id(i)])), BinaryOp(<=, ArrayCell(Id(str), [Id(i)]), StringLit(Z))), AssignStmt(Id(index), BinaryOp(-, ArrayCell(Id(str), [Id(i)]), StringLit(A)))), [], If((BinaryOp(and, BinaryOp(<=, StringLit(a), ArrayCell(Id(str), [Id(i)])), BinaryOp(<=, ArrayCell(Id(str), [Id(i)]), StringLit(z))), AssignStmt(Id(index), BinaryOp(-, ArrayCell(Id(str), [Id(i)]), StringLit(a)))), [], Continue)), AssignStmt(ArrayCell(Id(mark), [Id(index)]), BooleanLit(True))])), VarDecl(Id(i), NumberType, None, NumLit(0.0)), For(Id(i), BinaryOp(>, Id(i), NumLit(25.0)), NumLit(1.0), If((BinaryOp(==, ArrayCell(Id(mark), [Id(i)]), BooleanLit(False)), Return(BooleanLit(False))), [], None)), Return(BooleanLit(True))])), FuncDecl(Id(main), [], Block([VarDecl(Id(str), StringType, None, StringLit(The quick brown fox jumps over the lazy dog)), If((BinaryOp(==, CallExpr(Id(checkPangram), [Id(str)]), BooleanLit(True)), CallStmt(Id(writeString), [StringLit(Yes)])), [], CallStmt(Id(writeString), [StringLit(No)]))]))])