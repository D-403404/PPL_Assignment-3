Program([FuncDecl(Id(printPascal), [], Block([VarDecl(Id(arr), ArrayType([10.0, 10.0], NumberType), None, None), VarDecl(Id(line), NumberType, None, NumLit(0.0)), For(Id(line), BinaryOp(>=, Id(line), NumLit(10.0)), NumLit(1.0), Block([VarDecl(Id(i), NumberType, None, NumLit(0.0)), For(Id(i), BinaryOp(>, Id(i), Id(line)), NumLit(1.0), Block([If((BinaryOp(or, BinaryOp(==, Id(line), Id(i)), BinaryOp(==, Id(i), NumLit(0.0))), AssignStmt(ArrayCell(Id(arr), [Id(line), Id(i)]), NumLit(1.0))), [], AssignStmt(ArrayCell(Id(arr), [Id(line), Id(i)]), BinaryOp(+, ArrayCell(Id(arr), [BinaryOp(-, Id(line), NumLit(1.0)), BinaryOp(-, Id(i), NumLit(1.0))]), ArrayCell(Id(arr), [BinaryOp(-, Id(line), NumLit(1.0)), Id(i)])))), CallStmt(Id(writeString), [BinaryOp(..., ArrayCell(Id(arr), [Id(line), Id(i)]), StringLit( ))])])), CallStmt(Id(writeString), [StringLit(\\n)])]))])), FuncDecl(Id(main), [], Block([CallStmt(Id(printPascal), [])]))])