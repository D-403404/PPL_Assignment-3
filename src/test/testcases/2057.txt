
func multiply(number F[2,2], number M[2,2]) 

func power(number F[2,2], number n) 
  
func fib(number n) 
begin
    number F[2,2] <- [ [ 1, 1 ], [ 1, 0 ] ]
      
    if (n == 0) 
        return 0 
          
    power(F, n - 1) 
      
    return F[0,0] 
end
  
func multiply(number F[2,2], number M[2,2]) 
begin
    number x <- F[0,0] * M[0,0] + F[0,1] * M[1,0] 
    number y <- F[0,0] * M[0,1] + F[0,1] * M[1,1] 
    number z <- F[1,0] * M[0,0] + F[1,1] * M[1,0] 
    number w <- F[1,0] * M[0,1] + F[1,1] * M[1,1] 
      
    F[0,0] <- x 
    F[0,1] <- y 
    F[1,0] <- z 
    F[1,1] <- w 
end
  
func power(number F[2,2], number n) 
begin
    number i 
    number M[2,2] <- [ [ 1, 1 ], [ 1, 0 ] ]
      
    ## n - 1 times multiply the  
    ## matrix to [[1,1], [1,0]]
    i <- 2
    for i until i > n by 1 
        multiply(F, M) 
end
  
## Driver code 
func main() 
begin
    number n <- 9 
    print(" "...fib(n)) 
end
